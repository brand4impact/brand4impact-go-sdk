/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// SecurityUser struct for SecurityUser
type SecurityUser struct {
	JwtToken *string `json:"jwtToken,omitempty"`
	Platform *string `json:"platform,omitempty"`
	Roles *[]string `json:"roles,omitempty"`
}

// NewSecurityUser instantiates a new SecurityUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityUser() *SecurityUser {
	this := SecurityUser{}
	return &this
}

// NewSecurityUserWithDefaults instantiates a new SecurityUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityUserWithDefaults() *SecurityUser {
	this := SecurityUser{}
	return &this
}

// GetJwtToken returns the JwtToken field value if set, zero value otherwise.
func (o *SecurityUser) GetJwtToken() string {
	if o == nil || o.JwtToken == nil {
		var ret string
		return ret
	}
	return *o.JwtToken
}

// GetJwtTokenOk returns a tuple with the JwtToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityUser) GetJwtTokenOk() (*string, bool) {
	if o == nil || o.JwtToken == nil {
		return nil, false
	}
	return o.JwtToken, true
}

// HasJwtToken returns a boolean if a field has been set.
func (o *SecurityUser) HasJwtToken() bool {
	if o != nil && o.JwtToken != nil {
		return true
	}

	return false
}

// SetJwtToken gets a reference to the given string and assigns it to the JwtToken field.
func (o *SecurityUser) SetJwtToken(v string) {
	o.JwtToken = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *SecurityUser) GetPlatform() string {
	if o == nil || o.Platform == nil {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityUser) GetPlatformOk() (*string, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *SecurityUser) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *SecurityUser) SetPlatform(v string) {
	o.Platform = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *SecurityUser) GetRoles() []string {
	if o == nil || o.Roles == nil {
		var ret []string
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityUser) GetRolesOk() (*[]string, bool) {
	if o == nil || o.Roles == nil {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *SecurityUser) HasRoles() bool {
	if o != nil && o.Roles != nil {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *SecurityUser) SetRoles(v []string) {
	o.Roles = &v
}

func (o SecurityUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JwtToken != nil {
		toSerialize["jwtToken"] = o.JwtToken
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	return json.Marshal(toSerialize)
}

type NullableSecurityUser struct {
	value *SecurityUser
	isSet bool
}

func (v NullableSecurityUser) Get() *SecurityUser {
	return v.value
}

func (v *NullableSecurityUser) Set(val *SecurityUser) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityUser) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityUser(val *SecurityUser) *NullableSecurityUser {
	return &NullableSecurityUser{value: val, isSet: true}
}

func (v NullableSecurityUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


