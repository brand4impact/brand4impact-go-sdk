/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// ApiSort struct for ApiSort
type ApiSort struct {
	Parameter *string `json:"parameter,omitempty"`
	Criteria *string `json:"criteria,omitempty"`
}

// NewApiSort instantiates a new ApiSort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSort() *ApiSort {
	this := ApiSort{}
	return &this
}

// NewApiSortWithDefaults instantiates a new ApiSort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSortWithDefaults() *ApiSort {
	this := ApiSort{}
	return &this
}

// GetParameter returns the Parameter field value if set, zero value otherwise.
func (o *ApiSort) GetParameter() string {
	if o == nil || o.Parameter == nil {
		var ret string
		return ret
	}
	return *o.Parameter
}

// GetParameterOk returns a tuple with the Parameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSort) GetParameterOk() (*string, bool) {
	if o == nil || o.Parameter == nil {
		return nil, false
	}
	return o.Parameter, true
}

// HasParameter returns a boolean if a field has been set.
func (o *ApiSort) HasParameter() bool {
	if o != nil && o.Parameter != nil {
		return true
	}

	return false
}

// SetParameter gets a reference to the given string and assigns it to the Parameter field.
func (o *ApiSort) SetParameter(v string) {
	o.Parameter = &v
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *ApiSort) GetCriteria() string {
	if o == nil || o.Criteria == nil {
		var ret string
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSort) GetCriteriaOk() (*string, bool) {
	if o == nil || o.Criteria == nil {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *ApiSort) HasCriteria() bool {
	if o != nil && o.Criteria != nil {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given string and assigns it to the Criteria field.
func (o *ApiSort) SetCriteria(v string) {
	o.Criteria = &v
}

func (o ApiSort) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Parameter != nil {
		toSerialize["parameter"] = o.Parameter
	}
	if o.Criteria != nil {
		toSerialize["criteria"] = o.Criteria
	}
	return json.Marshal(toSerialize)
}

type NullableApiSort struct {
	value *ApiSort
	isSet bool
}

func (v NullableApiSort) Get() *ApiSort {
	return v.value
}

func (v *NullableApiSort) Set(val *ApiSort) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSort) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSort(val *ApiSort) *NullableApiSort {
	return &NullableApiSort{value: val, isSet: true}
}

func (v NullableApiSort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


