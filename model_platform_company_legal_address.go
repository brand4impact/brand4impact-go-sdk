/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// PlatformCompanyLegalAddress struct for PlatformCompanyLegalAddress
type PlatformCompanyLegalAddress struct {
	Street *string `json:"street,omitempty"`
	Other *string `json:"other,omitempty"`
	Postalcode *string `json:"postalcode,omitempty"`
	City *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
}

// NewPlatformCompanyLegalAddress instantiates a new PlatformCompanyLegalAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformCompanyLegalAddress() *PlatformCompanyLegalAddress {
	this := PlatformCompanyLegalAddress{}
	return &this
}

// NewPlatformCompanyLegalAddressWithDefaults instantiates a new PlatformCompanyLegalAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformCompanyLegalAddressWithDefaults() *PlatformCompanyLegalAddress {
	this := PlatformCompanyLegalAddress{}
	return &this
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *PlatformCompanyLegalAddress) GetStreet() string {
	if o == nil || o.Street == nil {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompanyLegalAddress) GetStreetOk() (*string, bool) {
	if o == nil || o.Street == nil {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *PlatformCompanyLegalAddress) HasStreet() bool {
	if o != nil && o.Street != nil {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *PlatformCompanyLegalAddress) SetStreet(v string) {
	o.Street = &v
}

// GetOther returns the Other field value if set, zero value otherwise.
func (o *PlatformCompanyLegalAddress) GetOther() string {
	if o == nil || o.Other == nil {
		var ret string
		return ret
	}
	return *o.Other
}

// GetOtherOk returns a tuple with the Other field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompanyLegalAddress) GetOtherOk() (*string, bool) {
	if o == nil || o.Other == nil {
		return nil, false
	}
	return o.Other, true
}

// HasOther returns a boolean if a field has been set.
func (o *PlatformCompanyLegalAddress) HasOther() bool {
	if o != nil && o.Other != nil {
		return true
	}

	return false
}

// SetOther gets a reference to the given string and assigns it to the Other field.
func (o *PlatformCompanyLegalAddress) SetOther(v string) {
	o.Other = &v
}

// GetPostalcode returns the Postalcode field value if set, zero value otherwise.
func (o *PlatformCompanyLegalAddress) GetPostalcode() string {
	if o == nil || o.Postalcode == nil {
		var ret string
		return ret
	}
	return *o.Postalcode
}

// GetPostalcodeOk returns a tuple with the Postalcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompanyLegalAddress) GetPostalcodeOk() (*string, bool) {
	if o == nil || o.Postalcode == nil {
		return nil, false
	}
	return o.Postalcode, true
}

// HasPostalcode returns a boolean if a field has been set.
func (o *PlatformCompanyLegalAddress) HasPostalcode() bool {
	if o != nil && o.Postalcode != nil {
		return true
	}

	return false
}

// SetPostalcode gets a reference to the given string and assigns it to the Postalcode field.
func (o *PlatformCompanyLegalAddress) SetPostalcode(v string) {
	o.Postalcode = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *PlatformCompanyLegalAddress) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompanyLegalAddress) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *PlatformCompanyLegalAddress) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *PlatformCompanyLegalAddress) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *PlatformCompanyLegalAddress) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompanyLegalAddress) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *PlatformCompanyLegalAddress) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *PlatformCompanyLegalAddress) SetCountry(v string) {
	o.Country = &v
}

func (o PlatformCompanyLegalAddress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Street != nil {
		toSerialize["street"] = o.Street
	}
	if o.Other != nil {
		toSerialize["other"] = o.Other
	}
	if o.Postalcode != nil {
		toSerialize["postalcode"] = o.Postalcode
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformCompanyLegalAddress struct {
	value *PlatformCompanyLegalAddress
	isSet bool
}

func (v NullablePlatformCompanyLegalAddress) Get() *PlatformCompanyLegalAddress {
	return v.value
}

func (v *NullablePlatformCompanyLegalAddress) Set(val *PlatformCompanyLegalAddress) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformCompanyLegalAddress) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformCompanyLegalAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformCompanyLegalAddress(val *PlatformCompanyLegalAddress) *NullablePlatformCompanyLegalAddress {
	return &NullablePlatformCompanyLegalAddress{value: val, isSet: true}
}

func (v NullablePlatformCompanyLegalAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformCompanyLegalAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


