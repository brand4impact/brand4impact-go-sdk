/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// PlatformInvoiceEntry struct for PlatformInvoiceEntry
type PlatformInvoiceEntry struct {
	Concept *string `json:"concept,omitempty"`
	Units *int32 `json:"units,omitempty"`
	Base *PlatformInvoiceEntryBase `json:"base,omitempty"`
	Taxes *PlatformInvoiceEntryBase `json:"taxes,omitempty"`
}

// NewPlatformInvoiceEntry instantiates a new PlatformInvoiceEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformInvoiceEntry() *PlatformInvoiceEntry {
	this := PlatformInvoiceEntry{}
	return &this
}

// NewPlatformInvoiceEntryWithDefaults instantiates a new PlatformInvoiceEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformInvoiceEntryWithDefaults() *PlatformInvoiceEntry {
	this := PlatformInvoiceEntry{}
	return &this
}

// GetConcept returns the Concept field value if set, zero value otherwise.
func (o *PlatformInvoiceEntry) GetConcept() string {
	if o == nil || o.Concept == nil {
		var ret string
		return ret
	}
	return *o.Concept
}

// GetConceptOk returns a tuple with the Concept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformInvoiceEntry) GetConceptOk() (*string, bool) {
	if o == nil || o.Concept == nil {
		return nil, false
	}
	return o.Concept, true
}

// HasConcept returns a boolean if a field has been set.
func (o *PlatformInvoiceEntry) HasConcept() bool {
	if o != nil && o.Concept != nil {
		return true
	}

	return false
}

// SetConcept gets a reference to the given string and assigns it to the Concept field.
func (o *PlatformInvoiceEntry) SetConcept(v string) {
	o.Concept = &v
}

// GetUnits returns the Units field value if set, zero value otherwise.
func (o *PlatformInvoiceEntry) GetUnits() int32 {
	if o == nil || o.Units == nil {
		var ret int32
		return ret
	}
	return *o.Units
}

// GetUnitsOk returns a tuple with the Units field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformInvoiceEntry) GetUnitsOk() (*int32, bool) {
	if o == nil || o.Units == nil {
		return nil, false
	}
	return o.Units, true
}

// HasUnits returns a boolean if a field has been set.
func (o *PlatformInvoiceEntry) HasUnits() bool {
	if o != nil && o.Units != nil {
		return true
	}

	return false
}

// SetUnits gets a reference to the given int32 and assigns it to the Units field.
func (o *PlatformInvoiceEntry) SetUnits(v int32) {
	o.Units = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *PlatformInvoiceEntry) GetBase() PlatformInvoiceEntryBase {
	if o == nil || o.Base == nil {
		var ret PlatformInvoiceEntryBase
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformInvoiceEntry) GetBaseOk() (*PlatformInvoiceEntryBase, bool) {
	if o == nil || o.Base == nil {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *PlatformInvoiceEntry) HasBase() bool {
	if o != nil && o.Base != nil {
		return true
	}

	return false
}

// SetBase gets a reference to the given PlatformInvoiceEntryBase and assigns it to the Base field.
func (o *PlatformInvoiceEntry) SetBase(v PlatformInvoiceEntryBase) {
	o.Base = &v
}

// GetTaxes returns the Taxes field value if set, zero value otherwise.
func (o *PlatformInvoiceEntry) GetTaxes() PlatformInvoiceEntryBase {
	if o == nil || o.Taxes == nil {
		var ret PlatformInvoiceEntryBase
		return ret
	}
	return *o.Taxes
}

// GetTaxesOk returns a tuple with the Taxes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformInvoiceEntry) GetTaxesOk() (*PlatformInvoiceEntryBase, bool) {
	if o == nil || o.Taxes == nil {
		return nil, false
	}
	return o.Taxes, true
}

// HasTaxes returns a boolean if a field has been set.
func (o *PlatformInvoiceEntry) HasTaxes() bool {
	if o != nil && o.Taxes != nil {
		return true
	}

	return false
}

// SetTaxes gets a reference to the given PlatformInvoiceEntryBase and assigns it to the Taxes field.
func (o *PlatformInvoiceEntry) SetTaxes(v PlatformInvoiceEntryBase) {
	o.Taxes = &v
}

func (o PlatformInvoiceEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Concept != nil {
		toSerialize["concept"] = o.Concept
	}
	if o.Units != nil {
		toSerialize["units"] = o.Units
	}
	if o.Base != nil {
		toSerialize["base"] = o.Base
	}
	if o.Taxes != nil {
		toSerialize["taxes"] = o.Taxes
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformInvoiceEntry struct {
	value *PlatformInvoiceEntry
	isSet bool
}

func (v NullablePlatformInvoiceEntry) Get() *PlatformInvoiceEntry {
	return v.value
}

func (v *NullablePlatformInvoiceEntry) Set(val *PlatformInvoiceEntry) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformInvoiceEntry) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformInvoiceEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformInvoiceEntry(val *PlatformInvoiceEntry) *NullablePlatformInvoiceEntry {
	return &NullablePlatformInvoiceEntry{value: val, isSet: true}
}

func (v NullablePlatformInvoiceEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformInvoiceEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


