/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// PlatformCompany struct for PlatformCompany
type PlatformCompany struct {
	Token *string `json:"token,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Vat *string `json:"vat,omitempty"`
	Status *string `json:"status,omitempty"`
	Address *PlatformCompanyAddress `json:"address,omitempty"`
	Legal *PlatformCompanyLegal `json:"legal,omitempty"`
	SectorToken *string `json:"sectorToken,omitempty"`
	TopicsToken *[]string `json:"topicsToken,omitempty"`
}

// NewPlatformCompany instantiates a new PlatformCompany object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformCompany() *PlatformCompany {
	this := PlatformCompany{}
	return &this
}

// NewPlatformCompanyWithDefaults instantiates a new PlatformCompany object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformCompanyWithDefaults() *PlatformCompany {
	this := PlatformCompany{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *PlatformCompany) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *PlatformCompany) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *PlatformCompany) SetToken(v string) {
	o.Token = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PlatformCompany) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PlatformCompany) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PlatformCompany) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PlatformCompany) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PlatformCompany) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PlatformCompany) SetName(v string) {
	o.Name = &v
}

// GetVat returns the Vat field value if set, zero value otherwise.
func (o *PlatformCompany) GetVat() string {
	if o == nil || o.Vat == nil {
		var ret string
		return ret
	}
	return *o.Vat
}

// GetVatOk returns a tuple with the Vat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetVatOk() (*string, bool) {
	if o == nil || o.Vat == nil {
		return nil, false
	}
	return o.Vat, true
}

// HasVat returns a boolean if a field has been set.
func (o *PlatformCompany) HasVat() bool {
	if o != nil && o.Vat != nil {
		return true
	}

	return false
}

// SetVat gets a reference to the given string and assigns it to the Vat field.
func (o *PlatformCompany) SetVat(v string) {
	o.Vat = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PlatformCompany) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PlatformCompany) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *PlatformCompany) SetStatus(v string) {
	o.Status = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *PlatformCompany) GetAddress() PlatformCompanyAddress {
	if o == nil || o.Address == nil {
		var ret PlatformCompanyAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetAddressOk() (*PlatformCompanyAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *PlatformCompany) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given PlatformCompanyAddress and assigns it to the Address field.
func (o *PlatformCompany) SetAddress(v PlatformCompanyAddress) {
	o.Address = &v
}

// GetLegal returns the Legal field value if set, zero value otherwise.
func (o *PlatformCompany) GetLegal() PlatformCompanyLegal {
	if o == nil || o.Legal == nil {
		var ret PlatformCompanyLegal
		return ret
	}
	return *o.Legal
}

// GetLegalOk returns a tuple with the Legal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetLegalOk() (*PlatformCompanyLegal, bool) {
	if o == nil || o.Legal == nil {
		return nil, false
	}
	return o.Legal, true
}

// HasLegal returns a boolean if a field has been set.
func (o *PlatformCompany) HasLegal() bool {
	if o != nil && o.Legal != nil {
		return true
	}

	return false
}

// SetLegal gets a reference to the given PlatformCompanyLegal and assigns it to the Legal field.
func (o *PlatformCompany) SetLegal(v PlatformCompanyLegal) {
	o.Legal = &v
}

// GetSectorToken returns the SectorToken field value if set, zero value otherwise.
func (o *PlatformCompany) GetSectorToken() string {
	if o == nil || o.SectorToken == nil {
		var ret string
		return ret
	}
	return *o.SectorToken
}

// GetSectorTokenOk returns a tuple with the SectorToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetSectorTokenOk() (*string, bool) {
	if o == nil || o.SectorToken == nil {
		return nil, false
	}
	return o.SectorToken, true
}

// HasSectorToken returns a boolean if a field has been set.
func (o *PlatformCompany) HasSectorToken() bool {
	if o != nil && o.SectorToken != nil {
		return true
	}

	return false
}

// SetSectorToken gets a reference to the given string and assigns it to the SectorToken field.
func (o *PlatformCompany) SetSectorToken(v string) {
	o.SectorToken = &v
}

// GetTopicsToken returns the TopicsToken field value if set, zero value otherwise.
func (o *PlatformCompany) GetTopicsToken() []string {
	if o == nil || o.TopicsToken == nil {
		var ret []string
		return ret
	}
	return *o.TopicsToken
}

// GetTopicsTokenOk returns a tuple with the TopicsToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformCompany) GetTopicsTokenOk() (*[]string, bool) {
	if o == nil || o.TopicsToken == nil {
		return nil, false
	}
	return o.TopicsToken, true
}

// HasTopicsToken returns a boolean if a field has been set.
func (o *PlatformCompany) HasTopicsToken() bool {
	if o != nil && o.TopicsToken != nil {
		return true
	}

	return false
}

// SetTopicsToken gets a reference to the given []string and assigns it to the TopicsToken field.
func (o *PlatformCompany) SetTopicsToken(v []string) {
	o.TopicsToken = &v
}

func (o PlatformCompany) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Vat != nil {
		toSerialize["vat"] = o.Vat
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Legal != nil {
		toSerialize["legal"] = o.Legal
	}
	if o.SectorToken != nil {
		toSerialize["sectorToken"] = o.SectorToken
	}
	if o.TopicsToken != nil {
		toSerialize["topicsToken"] = o.TopicsToken
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformCompany struct {
	value *PlatformCompany
	isSet bool
}

func (v NullablePlatformCompany) Get() *PlatformCompany {
	return v.value
}

func (v *NullablePlatformCompany) Set(val *PlatformCompany) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformCompany) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformCompany) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformCompany(val *PlatformCompany) *NullablePlatformCompany {
	return &NullablePlatformCompany{value: val, isSet: true}
}

func (v NullablePlatformCompany) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformCompany) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


