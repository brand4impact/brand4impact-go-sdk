/*
Total API Reference

Este contrato se usara para generar los clientes con todos los servicios necesarios.  `!Uso exclusivo interno!`               --- 

API version: 0.0.1
Contact: support@brand4impact.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package brand4impact

import (
	"encoding/json"
)

// PlatformSectorItemWrapper struct for PlatformSectorItemWrapper
type PlatformSectorItemWrapper struct {
	Items *[]PlatformSectorItem `json:"items,omitempty"`
	Pagination *Pagination `json:"pagination,omitempty"`
}

// NewPlatformSectorItemWrapper instantiates a new PlatformSectorItemWrapper object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformSectorItemWrapper() *PlatformSectorItemWrapper {
	this := PlatformSectorItemWrapper{}
	return &this
}

// NewPlatformSectorItemWrapperWithDefaults instantiates a new PlatformSectorItemWrapper object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformSectorItemWrapperWithDefaults() *PlatformSectorItemWrapper {
	this := PlatformSectorItemWrapper{}
	return &this
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *PlatformSectorItemWrapper) GetItems() []PlatformSectorItem {
	if o == nil || o.Items == nil {
		var ret []PlatformSectorItem
		return ret
	}
	return *o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSectorItemWrapper) GetItemsOk() (*[]PlatformSectorItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *PlatformSectorItemWrapper) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []PlatformSectorItem and assigns it to the Items field.
func (o *PlatformSectorItemWrapper) SetItems(v []PlatformSectorItem) {
	o.Items = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *PlatformSectorItemWrapper) GetPagination() Pagination {
	if o == nil || o.Pagination == nil {
		var ret Pagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlatformSectorItemWrapper) GetPaginationOk() (*Pagination, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *PlatformSectorItemWrapper) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given Pagination and assigns it to the Pagination field.
func (o *PlatformSectorItemWrapper) SetPagination(v Pagination) {
	o.Pagination = &v
}

func (o PlatformSectorItemWrapper) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullablePlatformSectorItemWrapper struct {
	value *PlatformSectorItemWrapper
	isSet bool
}

func (v NullablePlatformSectorItemWrapper) Get() *PlatformSectorItemWrapper {
	return v.value
}

func (v *NullablePlatformSectorItemWrapper) Set(val *PlatformSectorItemWrapper) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformSectorItemWrapper) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformSectorItemWrapper) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformSectorItemWrapper(val *PlatformSectorItemWrapper) *NullablePlatformSectorItemWrapper {
	return &NullablePlatformSectorItemWrapper{value: val, isSet: true}
}

func (v NullablePlatformSectorItemWrapper) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformSectorItemWrapper) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


